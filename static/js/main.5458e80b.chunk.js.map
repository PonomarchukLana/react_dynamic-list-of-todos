{"version":3,"sources":["api.ts","helper.ts","components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","components/Loader/Loader.tsx","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","SortBy","TodoList","todos","getCurrentTodoId","contextValue","useContext","TodoContext","className","map","id","completed","title","cn","type","onClick","TodoFilter","getQuery","getSortBy","useState","query","setQuery","onChange","e","value","target","toUpperCase","slice","placeholder","style","pointerEvents","Loader","TodoModal","currentTodo","onClose","user","setUser","useEffect","userId","href","email","name","createContext","App","setTodos","sortBy","setSortBy","currentTodoId","setCurrentTodoId","setCurrentTodo","currentTodos","data","copyedData","queryStr","toLowerCase","filter","item","includes","Active","Completed","Boolean","getCurrentData","find","todo","length","Provider","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.5458e80b.chunk.js","sourcesContent":["import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\n// This function creates a promise\n// that is resolved after a given delay\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  // we add some delay to see how the loader works\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos').then(todos => todos);\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","type Data = {\n  title: string;\n  completed: boolean;\n};\n\nexport enum SortBy {\n  All = '',\n  Active = 0,\n  Completed = 1,\n}\n\ntype Options = {\n  query: string;\n  sortBy: keyof typeof SortBy;\n};\n\nexport const getCurrentData = <T>(\n  data: Array<T & Data>,\n  {\n    query,\n    sortBy,\n  }: Options): T[] => {\n  let copyedData = [...data];\n\n  if (query) {\n    const queryStr = query.toLowerCase();\n\n    copyedData = copyedData.filter(item => {\n      const title = item.title.toLowerCase();\n\n      return title.includes(queryStr);\n    });\n  }\n\n  if (SortBy[sortBy] === SortBy.Active || SortBy[sortBy] === SortBy.Completed) {\n    copyedData = copyedData.filter(item => {\n      return item.completed === Boolean(SortBy[sortBy]);\n    });\n  }\n\n  return copyedData;\n};\n","import React, { useContext } from 'react';\nimport cn from 'classnames';\n// eslint-disable-next-line import/no-cycle\nimport { TodoContext } from '../../App';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todos: Todo[],\n  getCurrentTodoId: (arg: number) => void;\n};\n\nexport const TodoList: React.FC<Props> = (\n  {\n    todos,\n    getCurrentTodoId,\n  },\n) => {\n  const contextValue = useContext<number | null>(TodoContext);\n  const handleOnClick = (value: number) => {\n    getCurrentTodoId(value);\n  };\n\n  return (\n    <table className=\"table is-narrow is-fullwidth\">\n      <thead>\n        <tr>\n          <th>#</th>\n          <th>\n            <span className=\"icon\">\n              <i className=\"fas fa-check\" />\n            </span>\n          </th>\n          <th>Title</th>\n          <th> </th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {todos.map(({ id, completed, title }) => (\n          <tr data-cy=\"todo\" className=\"\" key={id}>\n            <td className=\"is-vcentered\">{id}</td>\n            <td className=\"is-vcentered\">\n              {completed && (\n                <span className=\"icon\" data-cy=\"iconCompleted\">\n                  <i className=\"fas fa-check\" />\n                </span>\n              )}\n            </td>\n            <td className=\"is-vcentered is-expanded\">\n              <p\n                className={cn({\n                  'has-text-danger': !completed,\n                  'has-text-success': completed,\n                })}\n              >\n                {title}\n              </p>\n            </td>\n            <td className=\"has-text-right is-vcentered\">\n              <button\n                data-cy=\"selectButton\"\n                className=\"button\"\n                type=\"button\"\n                onClick={() => handleOnClick(id)}\n              >\n                <span className=\"icon\">\n                  {contextValue === id ? (\n                    <i className=\"far fa-eye-slash\" />\n                  ) : (\n                    <i className=\"far fa-eye\" />\n                  )}\n                </span>\n              </button>\n            </td>\n          </tr>\n        ))}\n      </tbody>\n    </table>\n  );\n};\n","import React, { useState } from 'react';\n\ntype Props = {\n  getQuery: (arg: string) => void;\n  getSortBy: (arg: any) => void;\n};\n\nexport const TodoFilter: React.FC<Props> = ({ getQuery, getSortBy }) => {\n  const [query, setQuery] = useState('');\n\n  const handleSortBy = (e: React.ChangeEvent<HTMLSelectElement>) => {\n    const value = e.target.value[0].toUpperCase() + e.target.value.slice(1);\n\n    getSortBy(value);\n  };\n\n  const handleSearch = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const { value } = e.target;\n\n    setQuery(value);\n    getQuery(value);\n  };\n\n  const handleOndelete = () => {\n    setQuery('');\n    getQuery('');\n  };\n\n  return (\n    <form className=\"field has-addons\">\n      <p className=\"control\">\n        <span className=\"select\">\n          <select\n            onChange={handleSortBy}\n            data-cy=\"statusSelect\"\n          >\n            <option value=\"all\">All</option>\n            <option value=\"active\">Active</option>\n            <option value=\"completed\">Completed</option>\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n          value={query}\n          onChange={handleSearch}\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n\n        {query && (\n          <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              data-cy=\"clearSearchButton\"\n              type=\"button\"\n              className=\"delete\"\n              onClick={handleOndelete}\n            />\n          </span>\n        )}\n      </p>\n    </form>\n  );\n};\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import React, { useState, useEffect } from 'react';\nimport { getUser } from '../../api';\nimport { Loader } from '../Loader';\nimport { Todo } from '../../types/Todo';\nimport { User } from '../../types/User';\n\ntype Props = {\n  currentTodo: Todo;\n  onClose: (arg: null) => void;\n};\n\nexport const TodoModal: React.FC<Props> = ({ currentTodo, onClose }) => {\n  const [user, setUser] = useState<User | null>(null);\n\n  useEffect(() => {\n    getUser(currentTodo.userId).then(setUser);\n  }, []);\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {!user ? (\n        <Loader />\n      ) : (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              {`Todo #${currentTodo.id}`}\n            </div>\n\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={() => onClose(null)}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {currentTodo.title}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              {currentTodo.completed ? (\n                <strong className=\"has-text-success\">Done</strong>\n              ) : (\n                <strong className=\"has-text-danger\">Planned</strong>\n              )}\n\n              {' by '}\n\n              <a href={`mailto:${user.email}`}>\n                {user.name}\n              </a>\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","/* eslint-disable import/no-cycle */\n/* eslint-disable max-len */\nimport React, { useState, useEffect, createContext } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\nimport { getTodos } from './api';\nimport { SortBy, getCurrentData } from './helper';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\nimport { Todo } from './types/Todo';\nimport './App.scss';\n\nexport const TodoContext = createContext<number | null>(null);\n\nexport const App: React.FC = () => {\n  const [todos, setTodos] = useState<Todo[] | []>([]);\n  const [query, setQuery] = useState('');\n  const [sortBy, setSortBy] = useState<keyof typeof SortBy>('All');\n  const [currentTodoId, setCurrentTodoId] = useState<null | number>(null);\n  const [currentTodo, setCurrentTodo] = useState<null | Todo>(null);\n\n  const currentTodos = getCurrentData<Todo>(todos, { query, sortBy });\n\n  useEffect(() => {\n    getTodos().then(setTodos);\n  }, []);\n\n  useEffect(() => {\n    setCurrentTodo(todos.find(todo => todo.id === currentTodoId) || null);\n  }, [currentTodoId]);\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter\n                getQuery={setQuery}\n                getSortBy={setSortBy}\n              />\n            </div>\n\n            <div className=\"block\">\n              {todos.length === 0 ? (\n                <Loader />\n              ) : (\n                <TodoContext.Provider value={currentTodoId}>\n                  <TodoList\n                    todos={currentTodos}\n                    getCurrentTodoId={setCurrentTodoId}\n                  />\n                </TodoContext.Provider>\n              )}\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {currentTodo && <TodoModal currentTodo={currentTodo} onClose={setCurrentTodoId} />}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}